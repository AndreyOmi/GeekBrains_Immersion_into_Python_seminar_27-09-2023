'''
–ó–∞–¥–∞—á–∞ ‚Ññ 3:
–°–æ–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–∫–µ –∏ –≤ —Ä–∞–º–∫–∞—Ö –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
–ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤.
'''

import os
import json
import csv
import pickle

'''
–ó–∞–¥–∞—á–∞ –∏–∑ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è ‚Ññ 2:
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
–æ–±—Ö–æ–¥–∏—Ç –µ—ë –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤
—Ñ–∞–π–ª—ã json, csv –∏ pickle.
‚óã –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
‚óã –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª —ç—Ç–æ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
‚óã –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö, –∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–∑–º–µ—Ä
—Ñ–∞–π–ª–æ–≤ –≤ –Ω–µ–π —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
'''
def crawl_directory(directory_path, output_path):
    # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    crawl_results = []

    def get_directory_size(dir_path):
        # –†–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        total_size = 0
        for dirpath, dirnames, filenames in os.walk(dir_path):
            for filename in filenames:
                file_path = os.path.join(dirpath, filename)
                total_size += os.path.getsize(file_path)
        return total_size

    # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π 
    for root, dirs, files in os.walk(directory_path):
        dir_size = get_directory_size(root)
        crawl_results.append({
            "–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è": os.path.relpath(root, directory_path),
            "–ò–º—è": os.path.basename(root),
            "–¢–∏–ø": "–ø–∞–ø–∫–∞",
            "–†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö": dir_size
        })

        for file_name in files:
            file_path = os.path.join(root, file_name)
            crawl_results.append({
                "–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è": os.path.relpath(root, directory_path),
                "–ò–º—è": file_name,
                "–¢–∏–ø": "—Ñ–∞–π–ª",
                "–†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö": os.path.getsize(file_path)
            })

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ JSON —Ñ–∞–π–ª
    with open(os.path.join(output_path, "results.json"), "w") as json_file:
        json.dump(crawl_results, json_file, indent=4)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ CSV —Ñ–∞–π–ª
    with open(os.path.join(output_path, "results.csv"), "w", newline="", encoding="utf-8") as csv_file:
        fieldnames = ["–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è", "–ò–º—è", "–¢–∏–ø", "–†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö"]
        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(crawl_results)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ Pickle —Ñ–∞–π–ª
    with open(os.path.join(output_path, "results.pkl"), "wb") as pickle_file:
        pickle.dump(crawl_results, pickle_file)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:
# –ó–∞–º–µ–Ω–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
# –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≤ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã)

'''
–ó–∞–¥–∞—á–∞ —Å–µ–º–∏–Ω–∞—Ä–∞ ‚Ññ 1:
–í—Å–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–¥–∞—á—É 3 –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞. –ú—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏ 
—Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –ø—Å–µ–≤–¥–æ –∏–º–µ–Ω–∞–º–∏ –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º —á–∏—Å–µ–ª.
üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–Ω–µ–µ 
—Ñ–∞–π–ª–∞ –Ω–æ–≤—ã–π —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON. 
üìå –ò–º–µ–Ω–∞ –ø–∏—à–∏—Ç–µ —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã. 
üìå –ö–∞–∂–¥—É—é –ø–∞—Ä—É —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
'''

def convert_to_json(input_file, output_file):
    data = []

    with open(input_file, 'r') as file:
        for line in file:
            # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ '|'
            parts = line.strip().split('|')
            if len(parts) == 2:
                string_value = parts[0].strip().capitalize()
                number_value = float(parts[1].strip())
                data.append({"String": string_value, "Number": number_value})

    with open(output_file, 'w') as json_file:
        json.dump(data, json_file, indent=4)

'''
–ó–∞–¥–∞—á–∞ —Å–µ–º–∏–Ω–∞—Ä–∞ ‚Ññ2:
üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ 
–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è, –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å 
–¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7). 
üìå –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ 
JSON —Ñ–∞–π–ª. 
üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
üìå –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏. 
üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ 
–æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞. 
üìå –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ 
–¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.

'''

def manage_users():
    try:
        with open("users.json", "r") as file: # —Ñ–∞–π–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤–Ω–æ–≤—å, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            users = json.load(file)
    except FileNotFoundError:
        users = {}

    while True:
        name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ exit): ").strip()
        if name.lower() == 'exit':
            break
        
        user_id = input("–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ exit): ").strip()
        if user_id.lower() == 'exit':
            break
        
        access_level = input("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7): ").strip()
        if access_level.lower() == 'exit':
            break
        
        if not access_level.isdigit() or not 1 <= int(access_level) <= 7:
            print("–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ —É—Ä–æ–≤–µ–Ω—å. –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 7 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).")
            continue
        
        access_level = int(access_level)
        
        users[user_id] = {"–ò–º—è": name, "–£—Ä–æ–≤–µ–Ω—å_–¥–æ—Å—Ç—É–ø–∞": access_level}
        
        with open("users.json", "w") as file:
            json.dump(users, file, indent=4)
        
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{name}' —Å –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º '{user_id}' –∏ —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ '{access_level}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª users.json.")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–¥–∞—á–∏ ‚Ññ 2 –∏–∑ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è:
    # –ó–∞–º–µ–Ω–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
    # –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≤ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã)
    crawl_directory("C:\GeekBrains_Immersion_in_Python","C:\GeekBrains_Immersion_in_Python\Lesson_16_Seminar_8_27-09-2023_19-00")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–¥–∞—á–∏ ‚Ññ 1 —Å–µ–º–∏–Ω–∞—Ä–∞:
    input_file = 'file_seminar_task_3.txt'
    output_file = 'file_seminar_task_3.json'
    convert_to_json(input_file, output_file)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–¥–∞—á–∏ ‚Ññ 2 —Å–µ–º–∏–Ω–∞—Ä–∞:
    manage_users()

